{"ast":null,"code":"var _jsxFileName = \"/Users/yeim/Projects/matzip-web/src/components/list3.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'LOADING':\n      return {\n        loading: true,\n        data: null,\n        error: null\n      };\n\n    case 'SUCCESS':\n      return {\n        loading: false,\n        data: action.data,\n        error: null\n      };\n\n    case 'ERROR':\n      return {\n        loading: false,\n        data: null,\n        error: action.error\n      };\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nfunction ListThree() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    loading: false,\n    data: null,\n    error: null\n  });\n\n  const fetchUsers = async () => {\n    dispatch({\n      type: 'LOADING'\n    });\n\n    try {\n      const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n      dispatch({\n        type: 'SUCCESS',\n        data: response.data\n      });\n    } catch (e) {\n      dispatch({\n        type: 'ERROR',\n        error: e\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const {\n    loading,\n    data: users,\n    error\n  } = state; // state.data 를 users 키워드로 조회\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB85C\\uB529\\uC911..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 23\n  }, this);\n  if (!users) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.username, \" (\", user.name, \")\"]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchUsers,\n      children: \"\\uB2E4\\uC2DC \\uBD88\\uB7EC\\uC624\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ListThree, \"tOr8KtkX2d2tCqm9oG+vYx0U4Gs=\");\n\n_c = ListThree;\nexport default ListThree;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListThree\");","map":{"version":3,"sources":["/Users/yeim/Projects/matzip-web/src/components/list3.js"],"names":["React","useEffect","useReducer","axios","reducer","state","action","type","loading","data","error","Error","ListThree","dispatch","fetchUsers","response","get","e","users","map","user","username","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,SAAL;AACI,aAAO;AACHC,QAAAA,OAAO,EAAE,IADN;AAEHC,QAAAA,IAAI,EAAE,IAFH;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAK,SAAL;AACI,aAAO;AACHF,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFV;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAK,OAAL;AACI,aAAO;AACHF,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,IAAI,EAAE,IAFH;AAGHC,QAAAA,KAAK,EAAEJ,MAAM,CAACI;AAHX,OAAP;;AAKJ;AACI,YAAM,IAAIC,KAAJ,CAAW,0BAAyBL,MAAM,CAACC,IAAK,EAAhD,CAAN;AApBR;AAsBH;;AAED,SAASK,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBX,UAAU,CAACE,OAAD,EAAU;AAC1CI,IAAAA,OAAO,EAAE,KADiC;AAE1CC,IAAAA,IAAI,EAAE,IAFoC;AAG1CC,IAAAA,KAAK,EAAE;AAHmC,GAAV,CAApC;;AAMA,QAAMI,UAAU,GAAG,YAAY;AAC3BD,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAI;AACA,YAAMQ,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CACnB,4CADmB,CAAvB;AAGAH,MAAAA,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE,SAAR;AAAmBE,QAAAA,IAAI,EAAEM,QAAQ,CAACN;AAAlC,OAAD,CAAR;AACH,KALD,CAKE,OAAOQ,CAAP,EAAU;AACRJ,MAAAA,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE,OAAR;AAAiBG,QAAAA,KAAK,EAAEO;AAAxB,OAAD,CAAR;AACH;AACJ,GAVD;;AAYAhB,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM;AAAEN,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAES,KAAjB;AAAwBR,IAAAA;AAAxB,MAAkCL,KAAxC,CAvBiB,CAuB8B;;AAE/C,MAAIG,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIE,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,MAAI,CAACQ,KAAL,EAAY,OAAO,IAAP;AACZ,sBACI;AAAA,4BACI;AAAA,gBACKA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACX;AAAA,mBACKA,IAAI,CAACC,QADV,QACsBD,IAAI,CAACE,IAD3B;AAAA,SAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAQ,MAAA,OAAO,EAAET,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAYH;;GAxCQF,S;;KAAAA,S;AA0CT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useReducer } from 'react';\nimport axios from 'axios';\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case 'LOADING':\n            return {\n                loading: true,\n                data: null,\n                error: null\n            };\n        case 'SUCCESS':\n            return {\n                loading: false,\n                data: action.data,\n                error: null\n            };\n        case 'ERROR':\n            return {\n                loading: false,\n                data: null,\n                error: action.error\n            };\n        default:\n            throw new Error(`Unhandled action type: ${action.type}`);\n    }\n}\n\nfunction ListThree() {\n    const [state, dispatch] = useReducer(reducer, {\n        loading: false,\n        data: null,\n        error: null\n    });\n\n    const fetchUsers = async () => {\n        dispatch({ type: 'LOADING' });\n        try {\n            const response = await axios.get(\n                'https://jsonplaceholder.typicode.com/users'\n            );\n            dispatch({ type: 'SUCCESS', data: response.data });\n        } catch (e) {\n            dispatch({ type: 'ERROR', error: e });\n        }\n    };\n\n    useEffect(() => {\n        fetchUsers();\n    }, []);\n\n    const { loading, data: users, error } = state; // state.data 를 users 키워드로 조회\n\n    if (loading) return <div>로딩중..</div>;\n    if (error) return <div>에러가 발생했습니다</div>;\n    if (!users) return null;\n    return (\n        <>\n            <ul>\n                {users.map(user => (\n                    <li key={user.id}>\n                        {user.username} ({user.name})\n                    </li>\n                ))}\n            </ul>\n            <button onClick={fetchUsers}>다시 불러오기</button>\n        </>\n    );\n}\n\nexport default ListThree;\n"]},"metadata":{},"sourceType":"module"}